#!/usr/bin/env python

import os, sys, subprocess, traceback

USAGE = """
git-split: Split the staging area into individual one-file changes

Usage:
    git-split

Tip:

    git reset --soft HEAD~ && git split

will split your most recent commit into individual file changes.

"""


def split():
    def git(*cmd, **kwds):
        return subprocess.check_output(('git',) + cmd, **kwds)

    while not os.path.isdir('.git'):
        parent = os.path.dirname(os.getcwd())
        if parent == os.getcwd():
            raise ValueError('Not in a git directory')
        os.chdir(parent)

    splits = 0
    lines = git('status', '--porcelain')

    try:
        lines = lines.decode()
    except:
        pass

    for line in lines.splitlines():
        mode, filename = line.split(None, 1)
        filenames = filename.split(' -> ')
        try:
            if mode == '??':
                git('add', *filenames, cwd=root)
            git('commit', '-m', '[split] %s' % filenames[0], *filenames)
            splits += 1

        except:
            print('ERROR: couldn\'t commit filename %s.' % filename)
            traceback.print_exc()
            print('ERROR:')

    print('%d commit%s generated' % (splits, '' if splits == 1 else 's'))


if __name__ == '__main__':
    if any(h in sys.argv for h in ('-h', '--help')):
        print(USAGE)
    else:
        split()
